[DEFAULT]
# logging, make sure that the user under whom the server runs has permission
# to write to the directory.
log_file = {{ monasca_api_log_file }}
log_dir = {{ api_log_dir }}
debug = {{ api_debug }}

# Identifies the region that the Monasca API is running in.
region = {{ api_region }}

# Dispatchers to be loaded to serve restful APIs
[dispatcher]
versions = monasca_api.v2.reference.versions:Versions
metrics = monasca_api.v2.reference.metrics:Metrics
metrics_measurements = monasca_api.v2.reference.metrics:MetricsMeasurements
metrics_statistics = monasca_api.v2.reference.metrics:MetricsStatistics
metrics_names = monasca_api.v2.reference.metrics:MetricsNames
alarm_definitions = monasca_api.v2.reference.alarm_definitions:AlarmDefinitions
alarms = monasca_api.v2.reference.alarms:Alarms
alarms_state_history = monasca_api.v2.reference.alarms:AlarmsStateHistory
notification_methods = monasca_api.v2.reference.notifications:Notifications

[security]
# The roles that are allowed full access to the API.
default_authorized_roles = {% for role in api_default_authorized_roles %}{{ role }}{% if not loop.last %}, {% endif %}{% endfor %}

# The roles that are allowed to only POST metrics to the API. This role would be used by the Monasca Agent.
agent_authorized_roles = {% for role in api_agent_authorized_roles %}{{ role }}{% if not loop.last %}, {% endif %}{% endfor %}

# The roles that are allowed to access the API on behalf of another tenant.
# For example, a service can POST metrics to another tenant if they are a member of the "delegate" role.
delegate_authorized_roles = {% for role in api_delegate_authorized_roles %}{{ role }}{% if not loop.last %}, {% endif %}{% endfor %}

[messaging]
# The message queue driver to use
driver = monasca_api.common.messaging.kafka_publisher:KafkaPublisher

[repositories]
# The driver to use for the metrics repository
metrics_driver = monasca_api.common.repositories.influxdb.metrics_repository:MetricsRepository

# The driver to use for the alarm definitions repository
alarm_definitions_driver = monasca_api.common.repositories.mysql.alarm_definitions_repository:AlarmDefinitionsRepository

# The driver to use for the alarms repository
alarms_driver = monasca_api.common.repositories.mysql.alarms_repository:AlarmsRepository

# The driver to use for the notifications repository
notifications_driver = monasca_api.common.repositories.mysql.notifications_repository:NotificationsRepository

[dispatcher]
driver = v2_reference

[kafka]
# The endpoint to the kafka server
uri = {{ kafka_hosts }}

# The topic that metrics will be published too
metrics_topic = metrics

# consumer group name
group = api

# how many times to try when error occurs
max_retry = 1

# wait time between tries when kafka goes down
wait_time = 1

# use synchronous or asynchronous connection to kafka
async = False

# send messages in bulk or send messages one by one.
compact = False

# How many partitions this connection should listen messages on, this
# parameter is for reading from kafka. If listens on multiple partitions,
# For example, if the client should listen on partitions 1 and 3, then the
# configuration should look like the following:
#   partitions = 1
#   partitions = 3
# default to listen on partition 0.
partitions = 0

[influxdb]
# The IP address of the InfluxDB service.
ip_address = {{ influxdb_url | regex_replace('^https?\://([^:]+):([0-9]+)(/.*)?$', '\\1') }}

# The port number that the InfluxDB service is listening on.
port = {{ influxdb_url | regex_replace('^https?\://([^:]+):([0-9]+)(/.*)?$', '\\2') }}

# The username to authenticate with.
user = {{ influxdb_user }}

# The password to authenticate with.
password = {{ influxdb_password }}

# The name of the InfluxDB database to use.
database_name = {{ influxdb_db }}

[mysql]
database_name = {{ mysql_db }}
hostname = {{ mysql_host }}
username = {{ mysql_user }}
password = {{ mysql_password }}

[keystone_authtoken]
identity_uri = http://{{keystone_host}}:35357
auth_uri = http://{{keystone_host}}:{{ keystone_port }}
admin_password = {{ keystone_admin_password }}
admin_user = {{ keystone_admin }}
admin_tenant_name = {{ keystone_admin_tenant }}
cafile =
certfile =
keyfile =
insecure = false
